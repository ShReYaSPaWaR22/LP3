def knapsack(W, wt, val, n, memo={}):
    if n == 0 or W == 0:
        return 0

    if (n, W) in memo:
        return memo[(n, W)]

    if wt[n - 1] > W:
        result = knapsack(W, wt, val, n - 1, memo)
    else:
        result = max(
            val[n - 1] + knapsack(W - wt[n - 1], wt, val, n - 1, memo),
            knapsack(W, wt, val, n - 1, memo)
        )

    memo[(n, W)] = result
    return result

n = int(input("Enter the no. of items: "))
W = int(input("Enter the total capacity of knapsack: "))
wt = [int(input(f"Enter the weight of item {i + 1}: ")) for i in range(n)]
val = [int(input(f"Enter the value of item {i + 1}: ")) for i in range(n)]

print(knapsack(W, wt, val, n))